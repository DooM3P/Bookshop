package com.example.Bookshop.controller;

import com.example.Bookshop.models.Category;
import com.example.Bookshop.service.CategoryService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController // This means that this class is a Controller
@RequestMapping(path="/api/category") // This means URL's start with /demo (after Application path)
public class CategoryController {
    @Autowired // This means to get the bean called CategoryService
    // Which is auto-generated by Spring, we will use it to handle the data
    private CategoryService CategoryService;

    @GetMapping(path = "/")
    public ResponseEntity<List<Category>> getCategories(){
        try {
            List<Category> Categories = CategoryService.getCategories();
            return new ResponseEntity<>(Categories, HttpStatus.OK);
        } catch (Exception e) {
            return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }

    @PostMapping(path = "/")
    public ResponseEntity<Category> saveCategory(@RequestBody Category Category) {
        try {
            return new ResponseEntity<>(CategoryService.saveCategory(Category), HttpStatus.CREATED);
        }
        catch (Exception e){
            return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }

    @GetMapping(path = "/{code}")
    public Category getCategoryById(@PathVariable Long code) {
        return CategoryService.getCategoryByCode(code);
    }

    @DeleteMapping(path = "/{code}")
    public void deleteById(@PathVariable Long code) {
        CategoryService.deleteCategoryByCode(code);
    }

//    public ResponseEntity<Category> getCategoryByID(@PathVariable Long code){
//        try{
//            return new ResponseEntity<Category>(CategoryService.getCategories())
//        }
//    }
//    public void deleteCategoryByCode(Long code){
//
//    }
    @DeleteMapping(path = "/")
    public void deleteAll() {
        CategoryService.deleteAll();
    }
}
